package droids;

import Logger.BattleLogger;
import java.util.Random;
import static ui.Colors.*;

//health damage endurance damageCost  shield speed attackSpeed attackAccuracy
public class PyroDroid extends Droid {

    private static BattleLogger battleLogger = new BattleLogger();

    private int burnDuration = 2;
    private int burnDamage = 10;
    private int burnChance = 40;

    public PyroDroid(String name) {
        super(name, 300, 30, 30, 70,
                5, 88, 95, 82);
    }

    @Override
    public void attack(Droid target) {

        if((double) endurance<(double)maxEndurance/2.45){

            if(isDroidGoToBreak()){
                recoverEndurance();

                return;
            }
        }
        if(endurance<damageCost){
            recoverEndurance();
            return;
        }

        Random rand = new Random();
        double evadeChance = hitChance(target);
        double hitRoll = rand.nextDouble()*100;

        if (hitRoll > evadeChance) {
            System.out.print("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
            System.out.println("\t–Ω–µ –≤–ª—É—á–∏–≤ –ø–æ " + target.name+"\n");
            battleLogger.logEvent("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")\n"+RESET);
            battleLogger.logEvent("\t–Ω–µ –≤–ª—É—á–∏–≤ –ø–æ " + target.name+"\n");
            return;
        }

        int actualDamage = calculateDamage(target);

        endurance -= damageCost;
        if (endurance < 0) endurance = 0;

        System.out.println("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
        System.out.println("\t ‚Üí–∞—Ç–∞–∫—É—î " + target.getName() + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
        System.out.print("\t\t–ó–∞–≤–¥–∞—î " +RED+ actualDamage +RESET+ " —à–∫–æ–¥–∏.");
        System.out.println(" " +WHITE+ target.getShield() +RESET+ " —à–∫–æ–¥–∏ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –±—Ä–æ–Ω—é.");

        battleLogger.logEvent("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
        battleLogger.logEvent("\t ‚Üí–∞—Ç–∞–∫—É—î " + target.getName() + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
        battleLogger.logEvent("\t\t–ó–∞–≤–¥–∞—î " +RED+ actualDamage +RESET+ " —à–∫–æ–¥–∏.");
        battleLogger.logEvent(" " +WHITE+ target.getShield() +RESET+ " —à–∫–æ–¥–∏ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –±—Ä–æ–Ω—é.");

        target.takeDamage(actualDamage);

        // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å: –®–∞–Ω—Å –ø—ñ–¥–ø–∞–ª–∏—Ç–∏ –≤–æ—Ä–æ–≥–∞
        if (rand.nextInt(100) < burnChance) {
            System.out.println("\t\tüî• " + target.getName() + " –ø—ñ–¥–ø–∞–ª–µ–Ω–∏–π —ñ –±—É–¥–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ " +RED+ burnDamage +RESET+ " —à–∫–æ–¥–∏ –∫–æ–∂–µ–Ω —Ä–∞—É–Ω–¥!\n");
            battleLogger.logEvent("\t\tüî• " + target.getName() + " –ø—ñ–¥–ø–∞–ª–µ–Ω–∏–π —ñ –±—É–¥–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ " +RED+ burnDamage +RESET+ " —à–∫–æ–¥–∏ –∫–æ–∂–µ–Ω —Ä–∞—É–Ω–¥!\n");
            target.applyBurn(burnDuration, burnDamage);
        }

        if(!target.isAlive()){
            System.out.println("\t\t\t‚Üí–£ "+target.getName()+" –ª–∏—à–∞—î—Ç—å—Å—è "+GREEN+"0"+RESET+" –∑–¥–æ—Ä–æ–≤'—è"+"\n");

            battleLogger.logEvent("\t\t\t‚Üí–£ "+target.getName()+" –ª–∏—à–∞—î—Ç—å—Å—è "+GREEN+"0"+RESET+" –∑–¥–æ—Ä–æ–≤'—è"+"\n");
            return;
        }
        System.out.println("\t\t\t‚Üí–£ "+target.getName()+" –ª–∏—à–∞—î—Ç—å—Å—è " +GREEN+ target.getHealth()+RESET+" –∑–¥–æ—Ä–æ–≤'—è"+"\n");
        battleLogger.logEvent("\t\t\t‚Üí–£ "+target.getName()+" –ª–∏—à–∞—î—Ç—å—Å—è " +GREEN+ target.getHealth()+RESET+" –∑–¥–æ—Ä–æ–≤'—è"+"\n");

    }
}