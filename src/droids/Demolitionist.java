package droids;

import java.util.Random;
import Logger.BattleLogger;
import static ui.Colors.*;



public class Demolitionist extends Droid {

    private static BattleLogger battleLogger = new BattleLogger();

    private double critChance = 42;
    private double critMultiplier = 2;
    private int stunChance = 28;

    public Demolitionist(String name) {
        super(name, 400, 30, 35, 100, 8, 60, 75, 85);
    }

    // –ê—Ç–∞–∫—É—î –≤—Å—ñ—Ö –≤–æ—Ä–æ–≥—ñ–≤ –æ–¥–Ω–æ—á–∞—Å–Ω–æ
    public void attack(Droid target) {
        if ((double) endurance < (double) maxEndurance / 2.45) {
            if (isDroidGoToBreak()) {
                recoverEndurance();
                return;
            }
        }

        if (endurance < damageCost) {
            recoverEndurance();
            return;
        }

        Random rand = new Random();

            double evadeChance = hitChance(target);
            double hitRoll = rand.nextDouble() * 100;

            if (hitRoll > evadeChance) {
                System.out.print("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                System.out.println("\t–Ω–µ –≤–ª—É—á–∏–≤ –ø–æ " + target.name+"\n");
                battleLogger.logEvent("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")\n"+RESET);
                battleLogger.logEvent("\t–Ω–µ –≤–ª—É—á–∏–≤ –ø–æ " + target.name+"\n");
                return;
            }

            int actualDamage = calculateDamage(target);

            endurance -= damageCost;
            if (endurance < 0) endurance = 0;


            if (rand.nextInt(100) < critChance) {
                actualDamage *= critMultiplier;
                System.out.println("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                System.out.println("\t ‚Üí–∞—Ç–∞–∫—É—î " + target.getName() + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                System.out.println("\t\tüí• –ö—Ä–∏—Ç–∏—á–Ω–∏–π —É–¥–∞—Ä! –∑–∞–≤–¥–∞—î " +YELLOW+ actualDamage +RESET+ " —à–∫–æ–¥–∏!");
                System.out.println(" " +WHITE+ target.getShield() +RESET+ " —à–∫–æ–¥–∏ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –±—Ä–æ–Ω—é.");

                battleLogger.logEvent("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                battleLogger.logEvent("\t ‚Üí–∞—Ç–∞–∫—É—î " + target.getName() + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                battleLogger.logEvent("\t\tüí• –ö—Ä–∏—Ç–∏—á–Ω–∏–π —É–¥–∞—Ä! –∑–∞–≤–¥–∞—î " +YELLOW+ actualDamage +RESET+ " —à–∫–æ–¥–∏!");
                battleLogger.logEvent(" " +WHITE+ target.getShield() +RESET+ " —à–∫–æ–¥–∏ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –±—Ä–æ–Ω—é.");
            } else {
                System.out.println("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                System.out.println("\t ‚Üí–∞—Ç–∞–∫—É—î " + target.getName() + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                System.out.print("\t\t–ó–∞–≤–¥–∞—î " +RED+ actualDamage +RESET+ " —à–∫–æ–¥–∏.");
                System.out.println(" " +WHITE+ target.getShield() +RESET+ " —à–∫–æ–¥–∏ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –±—Ä–æ–Ω—é.");

                battleLogger.logEvent("‚ñ∂"+name + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                battleLogger.logEvent("\t ‚Üí–∞—Ç–∞–∫—É—î " + target.getName() + GREEN+" ("+getHealth()+")"+ CYAN+"("+getEndurance()+")"+ RED+"("+getDamage()+")"+ WHITE+"("+getShield()+")"+RESET);
                battleLogger.logEvent("\t\t–ó–∞–≤–¥–∞—î " +RED+ actualDamage +RESET+ " —à–∫–æ–¥–∏.");
                battleLogger.logEvent(" " +WHITE+ target.getShield() +RESET+ " —à–∫–æ–¥–∏ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –±—Ä–æ–Ω—é.");
            }

            target.takeDamage(actualDamage);

            if (rand.nextInt(100) < stunChance) {
                System.out.println("\t\t‚ö° " + target.getName() + " –æ–≥–ª—É—à–µ–Ω–∏–π —ñ –Ω–µ –º–æ–∂–µ –¥—ñ—è—Ç–∏ 1 —Ö—ñ–¥!\n");
                battleLogger.logEvent("\t\t‚ö° " + target.getName() + " –æ–≥–ª—É—à–µ–Ω–∏–π —ñ –Ω–µ –º–æ–∂–µ –¥—ñ—è—Ç–∏ 1 —Ö—ñ–¥!\n");
                target.stun(1);
            }

            if(!target.isAlive()){
                System.out.println("\t\t\t‚Üí–£ "+target.getName()+" –ª–∏—à–∞—î—Ç—å—Å—è "+GREEN+"0"+RESET+" –∑–¥–æ—Ä–æ–≤'—è"+"\n");

                battleLogger.logEvent("\t\t\t‚Üí–£ "+target.getName()+" –ª–∏—à–∞—î—Ç—å—Å—è "+GREEN+"0"+RESET+" –∑–¥–æ—Ä–æ–≤'—è"+"\n");
                return;
            }
            System.out.println("\t\t\t‚Üí–£ "+target.getName()+" –ª–∏—à–∞—î—Ç—å—Å—è " +GREEN+ target.getHealth()+RESET+" –∑–¥–æ—Ä–æ–≤'—è"+"\n");
            battleLogger.logEvent("\t\t\t‚Üí–£ "+target.getName()+" –ª–∏—à–∞—î—Ç—å—Å—è " +GREEN+ target.getHealth()+RESET+" –∑–¥–æ—Ä–æ–≤'—è"+"\n");
        }
    }

